name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0.7'

      - name: List directory contents
        run: ls -la
        working-directory: ${{ github.workspace }}

      - name: Install Bundler
        run: gem install bundler
        working-directory: ${{ github.workspace }}

      - name: Set Bundler Path
        run: |
          bundle config set path 'vendor/bundle'
        working-directory: ${{ github.workspace }}

      - name: Install dependencies
        run: bundle install
        working-directory: ${{ github.workspace }}

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Wait for deployment to complete
        run: |
          while true; do
            STATUS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/pages/deployment" | \
              grep -o '"status": "[^"]*' | grep -o '[^"]*$')
            if [ "$STATUS" != "in_progress" ]; then
              break
            fi
            echo "Waiting for previous deployment to finish..."
            sleep 30
          done

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
